SQL Social-Network Modification Exercises

Students at your hometown high school have decided to organize their social network using databases. So far, they have collected information about sixteen students in four grades, 9-12. Here's the schema: 

Highschooler ( ID, name, grade )
English: There is a high school student with unique ID and a given first name in a certain grade.

Friend ( ID1, ID2 )
English: The student with ID1 is friends with the student with ID2. Friendship is mutual, so if (123, 456) is in the Friend table, so is (456, 123). 

Likes ( ID1, ID2 )
English: The student with ID1 likes the student with ID2. Liking someone is not necessarily mutual, so if (123, 456) is in the Likes table, there is no guarantee that (456, 123) is also present. 

Your modifications will run over a small data set conforming to the schema.


Question 1
It's time for the seniors to graduate. Remove all 12th graders from Highschooler.

delete from highschooler
where grade=12


Question 2
If two students A and B are friends, and A likes B but not vice-versa, remove the Likes tuple.

delete from likes 
where id2 in (select f.id2 from friend f where likes.id1=f.id1) and 
id2 not in (select l.id1 from likes l where likes.id1=l.id2)


Question 3
For all cases where A is friends with B, and B is friends with C, add a new friendship for the pair A and C. Do not add duplicate friendships, friendships that already exist, or friendships with oneself. (This one is a bit challenging; congratulations if you get it right.)

insert into friend
select distinct f1.id1, f2.id2 from friend f1, friend f2 where f1.id2=f2.id1 and not f1.id1=f2.id2
and not exists (select * from friend f where f.id1=f1.id1 and f.id2=f2.id2) 


